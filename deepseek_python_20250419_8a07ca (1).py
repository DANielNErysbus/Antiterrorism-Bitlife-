import random
from dataclasses import dataclass, field
from typing import List, Dict

@dataclass
class Terrorist:
    name: str
    age: int
    role: str
    traits: List[str]
    location: str
    loyalty: int = field(default_factory=lambda: random.randint(30, 100))
    is_alive: bool = True

@dataclass
class TerrorGroup:
    name: str
    leaders: List[str]
    strength: int
    locations: List[str]
    structure: Dict[str, int] = field(default_factory=lambda: {
        "–ë–æ–µ–≤–∏–∫–∏": random.randint(50, 200),
        "–°–Ω–∞–π–ø–µ—Ä—ã": random.randint(5, 20),
        "–ü–æ–¥—Ä—ã–≤–Ω–∏–∫–∏": random.randint(10, 30),
        "–§–∏–Ω–∞–Ω—Å–∏—Å—Ç—ã": random.randint(3, 10)
    })

@dataclass
class Player:
    name: str
    age: int = 22
    rank: str = "–°—Ç–∞–∂—ë—Ä"
    reputation: int = 50
    stress: int = 0
    skills: Dict[str, int] = field(default_factory=lambda: {
        "–°—Ç—Ä–µ–ª—å–±–∞": random.randint(20, 40),
        "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞": random.randint(30, 50),
        "–ü–µ—Ä–µ–≥–æ–≤–æ—Ä—ã": random.randint(10, 30),
        "–•–∞–∫–µ—Ä—Å—Ç–≤–æ": random.randint(5, 20)
    })
    money: int = 5000
    completed_missions: int = 0
    agency: str = "FSB"

TERROR_GROUPS = [
    TerrorGroup(
        name="–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ö–∞—à–º–∏—Ä–∞",
        leaders=["–ê–±–¥—É–ª –†–∞—à–∏–¥", "–ú—É—Ö–∞–º–º–∞–¥ –§–∞—Ä—É–∫"],
        strength=75,
        locations=["–ö–∞—à–º–∏—Ä", "–ò—Å–ª–∞–º–∞–±–∞–¥"]
    ),
    TerrorGroup(
        name="–ò—Å–ª–∞–º—Å–∫–∏–π –î–∂–∏—Ö–∞–¥",
        leaders=["–ê—Ö–º–∞–¥ –ê–ª—å-–ú–∞—Å–∏—Ö", "–ê–ª–∏ –ê–ª—å-–ë–∞–≥–¥–∞–¥–∏"],
        strength=60,
        locations=["–ô–µ–º–µ–Ω", "–°–æ–º–∞–ª–∏"]
    )
]

def generate_terrorist(group: TerrorGroup) -> Terrorist:
    names = ["–ö–∞—Ä–∏–º –£–ª–ª–∞—Ö", "–ó–∏—è –•–∞–Ω", "–§–∞—Ä—É–∫ –ê—Ö–º–µ–¥–∑–∏"]
    traits = ["–®—Ä–∞–º –Ω–∞ –ª–∏—Ü–µ", "–•—Ä–æ–º–æ—Ç–∞", "–¢–∞—Ç—É–∏—Ä–æ–≤–∫–∞ –ö–æ—Ä–∞–Ω–∞", "–ü—Ä–æ—Ç–µ–∑ —Ä—É–∫–∏"]
    roles = ["–ë–æ–µ–≤–∏–∫", "–°–Ω–∞–π–ø–µ—Ä", "–ü–æ–¥—Ä—ã–≤–Ω–∏–∫", "–ü—Ä–æ–ø–æ–≤–µ–¥–Ω–∏–∫", "–§–∏–Ω–∞–Ω—Å–∏—Å—Ç"]
    
    return Terrorist(
        name=random.choice(names),
        age=random.randint(20, 50),
        role=random.choice(roles),
        traits=random.sample(traits, random.randint(1, 2)),
        location=random.choice(group.locations)
    )

def random_event(player: Player) -> str:
    events = [
        ("–í—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ —Å–∫–ª–∞–¥ –æ—Ä—É–∂–∏—è", {"reputation": 10, "money": 2000}),
        ("–í–∞—à –∏–Ω—Ñ–æ—Ä–º–∞—Ç–æ—Ä —É–±–∏—Ç", {"stress": 15}),
        ("–¢–µ—Ä–∞–∫—Ç –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â—ë–Ω", {"reputation": 20}),
        ("–°–∫–∞–Ω–¥–∞–ª –≤ –°–ú–ò", {"reputation": -10}),
        ("–ü–æ–≤—ã—à–µ–Ω–∏–µ –∑–∞—Ä–ø–ª–∞—Ç—ã", {"money": 5000})
    ]
    event, effects = random.choice(events)
    for attr, value in effects.items():
        setattr(player, attr, getattr(player, attr) + value)
    return event

def handle_mission(player: Player, group: TerrorGroup):
    terrorist = generate_terrorist(group)
    print(f"\nüö® –ú–ò–°–°–ò–Ø: {terrorist.role} {terrorist.name}")
    print(f"–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞: {group.name}")
    print(f"–õ–æ–∫–∞—Ü–∏—è: {terrorist.location}")
    print(f"–ü—Ä–∏–º–µ—Ç—ã: {', '.join(terrorist.traits)}")
    
    options = {
        "1": ("–®—Ç—É—Ä–º–æ–≤–∞—Ç—å", "–°—Ç—Ä–µ–ª—å–±–∞", 40),
        "2": ("–í–µ—Ä–±–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–æ—Ä–∞", "–ü–µ—Ä–µ–≥–æ–≤–æ—Ä—ã", 30),
        "3": ("–ö–∏–±–µ—Ä—Ä–∞–∑–≤–µ–¥–∫–∞", "–•–∞–∫–µ—Ä—Å—Ç–≤–æ", 20)
    }
    
    for key, (desc, _, _) in options.items():
        print(f"{key}. {desc}")
    
    choice = input("> ")
    if choice in options:
        _, skill, threshold = options[choice]
        success = player.skills.get(skill, 0) > random.randint(threshold - 20, threshold + 20)
        
        if success:
            print(f"‚úÖ –£—Å–ø–µ—Ö! {terrorist.name} –Ω–µ–π—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω.")
            player.reputation += 15
            player.completed_missions += 1
            group.strength -= 10
        else:
            print("‚ùå –ü—Ä–æ–≤–∞–ª! –¶–µ–ª—å –∏–∑–±–µ–∂–∞–ª–∞ –∑–∞—Ö–≤–∞—Ç–∞.")
            player.stress += 10
    else:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")

def main():
    print("=== –ê–ù–¢–ò–¢–ï–†–†–û–† BITLIFE ===")
    player = Player(name=input("–í–∞—à–µ –∏–º—è: "), agency=input("–°–ø–µ—Ü—Å–ª—É–∂–±–∞ (FSB/CIA/MI6): ").upper())
    
    year = 2023
    while year < 2033 and player.reputation > 0 and player.stress < 100:
        print(f"\n--- {year} –≥–æ–¥ ({player.age} –ª–µ—Ç) ---")
        print(f"–†–∞–Ω–≥: {player.rank} | –†–µ–ø—É—Ç–∞—Ü–∏—è: {player.reputation} | –°—Ç—Ä–µ—Å—Å: {player.stress}")
        print(f"–ù–∞–≤—ã–∫–∏: {player.skills}")
        
        event_type = random.choices(
            ["mission", "random_event", "promotion"],
            weights=[70, 20, 10]
        )[0]
        
        if event_type == "mission":
            handle_mission(player, random.choice(TERROR_GROUPS))
        elif event_type == "random_event":
            print(f"\nüì¢ –°–æ–±—ã—Ç–∏–µ: {random_event(player)}")
        else:
            if player.reputation >= 70 and player.rank == "–°—Ç–∞–∂—ë—Ä":
                player.rank = "–û—Ñ–∏—Ü–µ—Ä"
                print("\nüéâ –ü–æ–≤—ã—à–µ–Ω–∏–µ –¥–æ –û—Ñ–∏—Ü–µ—Ä–∞!")
            elif player.reputation >= 90 and player.rank == "–û—Ñ–∏—Ü–µ—Ä":
                player.rank = "–î–∏—Ä–µ–∫—Ç–æ—Ä"
                print("\nüî• –í—ã —Å—Ç–∞–ª–∏ –î–∏—Ä–µ–∫—Ç–æ—Ä–æ–º!")
                break
        
        player.age += 1
        year += 1
        player.stress = max(0, player.stress - 5)
    
    print("\n=== –ò–ì–†–ê –û–ö–û–ù–ß–ï–ù–ê ===")
    print(f"–§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–Ω–≥: {player.rank}")
    print(f"–í—ã–ø–æ–ª–Ω–µ–Ω–æ –º–∏—Å—Å–∏–π: {player.completed_missions}")
    print(f"–û—Å—Ç–∞—Ç–æ–∫ –¥–µ–Ω–µ–≥: ${player.money}")

if __name__ == "__main__":
    main()